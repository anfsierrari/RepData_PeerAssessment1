getwd()
dir.create("./Quiz4")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "./Quiz4/data.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "./Quiz4/data.csv", method = "curl")
my_df <- read.csv("./Quiz4/data.csv")
my_df <- strsplit(my_df$WGTP)
my_df <- strsplit(my_df$WGTP, split = 0)
my_df <- strsplit(my_df$WGTP, split = 0)
my_df <- strsplit(my_df$WGTP, split = 1)
my_df <- strsplit(my_df$WGTP, split = c(1))
head(my_df)
my_split <- strsplit(grep("wgtp", names(my_df), ignore.case = TRUE), split = 1)
my_split <- strsplit(grep("wgtp", names(my_df), ignore.case = TRUE, value = TRUE), split = 1)
my_split[13]
my_split[[13]]
my_split
my_split <- lapply(grep("wgtp", names(my_df), ignore.case = TRUE, value = TRUE), strsplit)
?strsplit
my_split <- lapply(grep("wgtp", names(my_df), ignore.case = TRUE, value = TRUE), strsplit(split="wgtp"))
my_split <- lapply(grep("wgtp", names(my_df), ignore.case = TRUE, value = TRUE), strsplit(split="wgtp"))
my_split <- lapply(grep("wgtp", names(my_df), ignore.case = TRUE, value = TRUE), strsplit, split = "wgtp")
my_split[[13]]
my_split[13
my_split[13]
my_split
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "./Quiz4/data2.csv", method="curl")
my_df <- read.csv("Quiz4/data2.csv")
my_col <- my_df$Gross.domestic.product.2012
head(my_col)
names(my_df)
head(my_df, 15)
my_col <- my_df$X.3
dim(my_col)
length(my_col  )
my_col <- my_col[5:330, ]
my_col <- my_col[5, ]
head(my_col)
my_col <- gsub(",", "", my_col)
head(my_col)
tail(my_col)
my_col
mean(my_col, na.rm = TRUE)
mean(as.numeric(my_col), na.rm = TRUE)
as.numeric(my_col)
my_df$X.3
as.numeric(my_col)
mean(as.numeric(my_col), na.rm = TRUE)
mean(as.numeric(as.character(my_col)), na.rm = TRUE)
my_df2 <- read.csv("./Quiz4/GDP.csv")
mean(gsub(",", "", my_df2$X.3) , na.rm = TRUE)
mean(as.numeric(gsub(",", "", my_df2$X.3)) , na.rm = TRUE)
mean(as.numeric(gsub(",", "", my_df2$X.3)) , na.rm = TRUE)
head(my_df2)
mean(as.numeric(gsub(",", "", my_df2$X.2)) , na.rm = TRUE)
x <- c(5,2,5,1,3,6,8)
x[1:4]
View(my_df)
mean(as.numeric(gsub(",", "", my_df2$X.2[5:219])) , na.rm = TRUE)
mean(as.numeric(as.character(my_col[5:219])), na.rm = TRUE)
names <- my_df$X.2
grep("^United", names)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "./Quiz4/domestic.csv", method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "./Quiz4/education.csv", method="curl")
domestic <- read.csv("./Quiz4/domestic.csv")
education <- read.csv(("./Quiz4/education.csv"))
View(domestic)
library(dplyr)
education <- tbl_df(education)
education
education$Special.Notes
grep("june", education$Special.Notes)
grep("[jJ]une", education$Special.Notes)
length(grep("[jJ]une", education$Special.Notes))
length(grep("end: [jJ]une", education$Special.Notes))
q()
library(swirl  )
swirl()
swirl()
x <- rnorm(100)
plot(x)
histogram(x)
hist(x)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col="green", breaks = 100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25~region, data=pollution, col="red" )
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset(pollution, region = "east")
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col="green")
hist(subset(pollution, region == "west")$pm25, col="green")
data(pollution)
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow=c(1, 2), mar=c(5,4,2,1))
west <- subset(pollution, region=="west")
plot(west$latitude, pm25, main="West")
plot(west$latitude, west4pm25, main="West")
plot(west$latitude, west$pm25, main="West")
plot(east$latitude, east$pm25, main="East")
?devices
?Devices
with(faithful, plot(eruption, waiting))
with(faithful, plot(eruptions, waiting))
title("Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title("Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title("Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
q()
library(swirl)
swirl()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, state, c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab="red")
title(main="Ozone and wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set = "n")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main="Wind and Ozone in NYC")
may <- subset(airquality, Month = 5)
may <- subset(airquality, Month == 5)
points(Wind, Ozone, data=may, pch=23, col="blue")
points(may$Wind, may$Ozone, pch=23, col="blue")
points(may$Wind, may$Ozone, pch=17, col="blue")
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind,notmay$Ozone,col="red",pch=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", c(17, 8), c("blue", "red"), c("May", "Other Months"))
legend("topright", pch = c(17, 8), col = c("blue", "red"), legend = c("May", "Other Months"))
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1, 2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and weather in New York City")
mtext("Ozone and Weather in New York City")
mtext("Ozone and Weather in New York City", outer = TRUE)
q()
q()
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, data=airquality)
xyplot(Ozone~Wind, data = airquality)
sdsd
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality)
0
xyplot(Ozone ~ Wind, data = airquality)
xyplot(Ozone ~ Wind, data = airquality)
info()
bye()
install.packages("lattice")
swirl()
xyplot(Ozone~Wind, data=airquality)
xyplot(Ozone~Wind, data=airquality, col="red", pch=8, main = "Big Apple Data")
xyplot(Ozone~Wind, data=airquality, pch=8, col="red", main = "Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data=airquality, layout=c(5,1))
xyplot(Ozone~Wind | Month, data=airquality, layout=c(5,1))
p <- xyplot(Ozone~Wind, data=airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R", local = TRUE))
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit(("myLabels.R"))
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat|color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat|color*cut, data=diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
swirl()
swirl()
q()
library(swirl)
q()
library(swirl)
swirl()
swirl()
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg)
library(ggplot2)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color=drv)
qplot(displ, hwy, data = mpg, color=drv, geom=c("point", "smooth"))
qplot(hwy, data=mpg, color=drv)
qplot(y= hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom = "boxplot")
qplot(drv, hwy, data=mpg, geom = "boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets=.~drv)
qplot(hwy, data=mpg, facets=drv~., binwidth=2)
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv)
g <- ggplot(data = mpg, aes(displ, hwt))
g <- ggplot(data = mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(size=4, alpha=1/2, aes(color=drv))
g+geom_point(size=4, alpha=1/2, aes(color=drv))+labs(title = "Swirl Rules!", x="Displacement", y=Hwy Mileage)
g+geom_point(size=4, alpha=1/2, aes(color=drv))+labs(title = "Swirl Rules!", x="Displacement", y="Hwy Mileage")
Type g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy
| Mileage")
Type g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx, myy, type="l", ylim=c(-3,3))
g <- ggplot(testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth="lm")
qplot(carat, price, data=diamonds, color=cut) + geom_smooth("lm")
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut, facets = .~cut) + geom_smooth(method="lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,4), na.rm = TRUE)
cutpoints <- quantile(diamonds$carat, seq(0,1,lenght=4), na.rm = TRUE)
cutpoints <- quantile(diamonds$carat, seq(0,1,length=4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat, price))+geom_boxplot()+facet_grid(.~cut)
q()
library(swirl)
Andres
swril()
swirl()
swirl()
0
0
info()
bye()
getwd()
setwd("~/GitHub/RepData_PeerAssessment1")
ls()
dir()
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date, "%Y-%m-%d")
head(activity)
tapply(activity$steps, weekday(activity$date), mean)
tapply(activity$steps, weekdays(activity$date), mean)
tapply(activity$steps, weekdays(activity$date), mean, na.rm=T)
tapply(activity$steps, weekdays(activity$date), median)
tapply(activity$steps, weekdays(activity$date), median, na.rm=T)
tapply(activity$steps, weekdays(activity$date), sum, na.rm=T)
a <- tapply(activity$steps, weekdays(activity$date), sum, na.rm=T)
as.matrix(a)
hist(as.matrix(a))
names(a)
barplot(as.matrix(a), names.arg=names(a))
barplot(as.matrix(a))
barplot(data.frame(a))
hist(a, freq = F)
hist(a, freq = F, breaks = names(a))
hist(a, freq = F, xlab=names(a))
hist(a, freq = F,nclass = names(a) )
as.vector(a)
hist(as.vector(a), breaks=names(a))
hist(as.vector(a))
hist(weekdays(activity$date))
hist(weekdays(activity$date))
barplot(weekdays(activity$date))
hist(as.factor(weekdays(activity$date)))
tapply(activity$date, activity$date, sum)
tapply(activity$steps, activity$date, sum)
hist(tapply(activity$steps, activity$date, sum))
hist(tapply(activity$steps, activity$date, sum, na.rm=T))
hist(tapply(activity$steps, activity$date, sum, na.rm=T))
tapply(activity$steps, activity$date, sum, na.rm=T)
as.data.frame(tapply(activity$steps, activity$date, sum, na.rm=T))
hist(activity$date)
hist(activity$date, breaks = 15)
hist(activity$date, breaks = 30)
hist(activity$date, breaks = 30, freq = F)
plot(activity$date, sum(activity$steps))
plot(activity$date, activity$steps)
plot(activity$date, activity$steps, type="b")
plot(activity$date, activity$steps, type="l")
plot(activity$date, activity$steps, type="hist")
plot(activity$date, activity$steps, type="histogram")
plot(activity$date, activity$steps, type = "h")
plot(activity$date, activity$steps, type = "s")
plot(activity$date, activity$steps, type = "s", fun=sum)
plot(activity$date, sum(activity$steps), type = "s")
plot(activity$date, tapply(activity$steps, activity$date, sum), type = "s")
plot(tapply(activity$steps, activity$date, sum))
plot(tapply(activity$steps, activity$date, sum), type="h")
a
plot(names(a), a)
barplot(a)
a <- tapply(activity$steps, activity$date, sum, na.rm=T)
a
barplot(a)
barplot(a, space = 0)
tapply(activity$steps, activity$interval, mean)
tapply(activity$steps, activity$interval, mean, na.rm=T)
plot(tapply(activity$steps, activity$interval, mean, na.rm=T))
plot(tapply(activity$steps, activity$interval, mean, na.rm=T), type="l")
pattern <- tapply(activity$steps, activity$interval, mean, na.rm=T)
max(pattern)
pattern
which(max(pattern))
which(pattern=max(pattern))
which.max(pattern)
pattern[[which.max(pattern)]]
plot(pattern, type="l", ylab="Mean steps")
plot(names(pattern), pattern, type="l", ylab="Mean steps")
is.na(activity)
frequency(is.na(activity))
sum(is.na(activity))
summary(activity)
?impute
activity$steps[is.na(activity$steps)]
activity$steps[is.na(activity$steps)] <- mean(activity$steps)
is.na(activity)
summary(activity)
activity$steps[is.na(activity$steps)] = mean(activity$steps)
summary(activity)
activity <- read.csv("activity.csv")
activity$steps[is.na(activity$steps)] = mean(activity$steps, na.rm = T)
summary(activity)
sum(is.na(activity))
activity <- read.csv("activity.csv")
sum(is.na(activity))
subset(activity$steps, activity$date == "2012-10-01")
subset(activity$steps, activity$date == "2012-10-05")
activity$steps[is.na(activity$steps)] = mean(subset(activity$steps, activity$interval == activity$interval[is.na(activity$steps)]), na.rm=T)
activity$steps[is.na(activity$steps)] = mean(subset(activity$steps, activity$interval = activity$interval[is.na(activity$steps)]), na.rm=T)
activity$steps[is.na(activity$steps)] = mean(subset(activity$steps, activity$interval[is.na(activity$steps)], na.rm=T)
activity$steps[is.na(activity$steps)] = mean(subset(activity$steps, activity$interval[is.na(activity$steps)]), na.rm=T)
activity$steps[is.na(activity$steps)] = mean(subset(activity$steps, activity$interval== activity$interval[is.na(activity$steps)]), na.rm=T)
summary(activity)
activity <- read.csv("activity.csv")
sum(is.na(activity))
activity$steps[is.na(activity$steps)]
sum(is.na(activity))
activity$steps[is.na(activity$steps)] <- mean(activity$steps, na.rm=T)
activity2 <- activity
library(dplyr)
weekdays(activity2$date)
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date, "%Y-%m-%d")
weekdays(activity)
weekdays(activity2$date)
weekdays(activity$date)
table(weekdays(activity$date))
sum(is.na(activity))
activity$steps[is.na(activity$steps)] <- mean(activity$steps, na.rm=T)
activity2 <- activity
str(activity2)
mutate(activity2, Day = if(weekdays(activity2$date)=="sábado | domingo", "Weekend")
weekdays(activity2$date)
a <- data.frame(c(1,1,1,1,1,0,0,0,0,2,2,2,2,2,3,3,3,3), ncol=1)
a
a <- matrix(c(1,1,1,2,2,2,3,3,3,4,4,4,4), ncol = 1)
a
mutate(a, b == (if(a$1 = c(2,4), "par")))
mutate(a, b == (if(a$1 == c(2,4), "par")))
mutate(a, b = case_when(a$1=1|2 ~ "par", a$1=3|4 ~ "impar"))
mutate(a, b = case_when(a=1|2 ~ "par", a=3|4 ~ "impar"))
mutate(activity2, day = case_when(weekdays(activity2$date)=="sábado|domingo"~"Weekend", weekdays(activity2$date)=="lunes|martes|miércoles|jueves|viernes"~"Weekday"))
mutate(activity2, day = case_when(weekdays(activity2$date)=="sábado"|"domingo"~"Weekend"))
mutate(activity2, day = case_when(weekdays(activity2$date)=="sábado"~"Weekend"))
activity2 <- mutate(activity2, day = case_when(weekdays(activity2$date)=="sábado"|"domingo"~"Weekend"))
activity2 <- mutate(activity2, day = case_when(weekdays(activity2$date)=="sábado"~"Weekend"))
table(activity2$day)
activity2 <- mutate(activity2, day = case_when(weekdays(activity2$date)=="sábado"~"Weekend", weekdays(activiyt2$date)=="domingo"~"weekend"))
activity2 <- mutate(activity2, day = case_when(weekdays(activity2$date)=="sábado"~"Weekend", weekdays(activity2$date)=="domingo"~"weekend"))
table(activity2$day)
activity2 <- mutate(activity2, day = case_when(weekdays(activity2$date)=="sábado"~"weekend", weekdays(activity2$date)=="domingo"~"weekend"))
activity2 <- mutate(activity2, day = case_when(weekdays(activity2$date)=="sábado"~"weekend", weekdays(activity2$date)=="domingo"~"weekend"))
table(activity2$day)
activity2 <- mutate(activity2, day = case_when(weekdays(activity2$date)=="sábado"~"weekend", weekdays(activity2$date)=="domingo"~"weekend", weekdays(activity2$date)=="Lunes"~"weekday"))
table(activity2$day)
activity2 <- mutate(activity2, day = case_when(weekdays(activity2$date)=="sábado"~"weekend", weekdays(activity2$date)=="domingo"~"weekend", weekdays(activity2$date)=="lunes"~"weekday"))
table(activity2$day)
activity2 <- mutate(activity2, day = case_when(weekdays(activity2$date)=="sábado"~"weekend", weekdays(activity2$date)=="domingo"~"weekend", weekdays(activity2$date)=="lunes"~"weekday", weekdays(activity2$date)=="martes"~"weekday", weekdays(activity2$date)=="miércoles"~"weekday", weekdays(activity2$date)=="jueves"~"weekday", weekdays(activity2$date)=="viernes"~"weekday"))
table(activity2$day)
nrow(activity2)
par(mfrow=C(1,2))
?par
par(mfcol=c(1,2))
plot(activity2$day, activity2$steps)
plot(as.factor(activity2$day), activity2$steps)
plot(as.factor(activity2$day), activity2$steps)
plot(as.factor(activity2$day), activity2$steps)
par(mfcol=c(2,1))
plot(as.factor(activity2$day), activity2$steps)
par(mfrow=c(2,1))
plot(as.factor(activity2$day), activity2$steps)
plot(as.factor(activity2$day), activity2$steps)
hist(activity2$steps)
hist(activity2$steps)
hist(activity2$steps)
par(mfrow=c(2,1))
tapply(activity2$steps, activity2$day, sum)
weekday <- activity2[activity2$day == "weekday", ]
weekend <- activity2[activity2$day == "weekend", ]
weekday_pat <- tapply(weekday$steps, weekday$interval, mean)
weeken_pat <- tapply(weekend$steps, weekend$interval, mean)
par(mfrow=c(2,1))
plot(names(weekday_pat), weekday_pat, type="l", main="Weekdays")
plot(names(weekend_pat), weekend_pat, type="l", main="Weekend")
weekend_pat <- tapply(weekend$steps, weekend$interval, mean)
plot(names(weekend_pat), weekend_pat, type="l", main="Weekend")
knit2html()
library(knitr)
knit2html("PA1_template.Rmd")
